{"version":3,"sources":["img/receipt.svg","components/AppNavbar.jsx","components/Login.jsx","redux/actions.js","redux/actionTypes.js","components/AspectRatioBox.jsx","components/ReceiptUpload.jsx","components/NewCategoryModal.jsx","components/NewExpense.jsx","components/ReceiptModal.jsx","components/ExpenseTable.jsx","components/Dashboard.jsx","App.js","serviceWorker.js","redux/reducers/uploadForm.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","AppNavbar","React","useState","expanded","setExpanded","Navbar","expand","bg","variant","fixed","Brand","href","alt","height","className","src","Toggle","onClick","aria-controls","Collapse","id","Nav","to","Login","Card","Header","Body","Title","Button","block","receiptLoaded","receiptURL","type","payload","connect","state","props","width","heightPercent","propsExlcudingWidth","OUTER_STYLES","overflow","paddingTop","position","style","margin","top","left","children","ALLOWED_FILE_TYPES","MAX_FILE_SIZE","onDrop","e","myImg","document","getElementById","URL","createObjectURL","display","onDropRejected","console","dir","rejectedFile","includes","alert","size","useDropzone","allow","maxSize","onDrag","noDragEventsBubbling","onDragEnter","onDragLeave","onDragOver","onDropAccepted","onFileDialogCancel","preventDropOnDocument","multiple","getRootProps","getInputProps","isDragActive","NewCategoryModal","show","setShow","handleClose","addNewCategory","log","Modal","onHide","closeButton","action","process","REACT_APP_TEST_USER_PROVIDERID","method","name","required","for","Footer","form","NewExpenseForm","categories","fetch","then","response","json","data","setState","value","selected","map","category","index","key","bucket_name","this","fetchCategories","accept","htmlFor","renderCategories","Component","ReceiptModal","ExpenseTable","isFetching","expenses","status","statusSortedExpenses","reduce","result","expense","push","expense_date","receipt_name","amount","Dropdown","Menu","Item","fetchExpenses","Table","bordered","hover","renderTable","Dashboard","greeting","first_name","fetchUserName","require","config","App","path","NewExpense","Boolean","window","location","hostname","match","initialState","deepCopy","oldObject","JSON","parse","stringify","combineReducers","uploadForm","newState","revokeObjectURL","createStore","rootReducer","rootElement","ReactDOM","render","store","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca92c7de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/receipt.c39872a4.svg\";","import React from 'react'\n\nimport { Nav, Navbar } from 'react-bootstrap'\nimport { NavLink } from \"react-router-dom\"\n\n\nconst AppNavbar = () => {\n  // hook for configuring navbar mobile menu to close when clicking a link\n  const [expanded, setExpanded] = React.useState(false);\n\n  return (\n    <Navbar expanded={expanded} expand=\"sm\" bg=\"light\" variant=\"light\" fixed=\"top\">\n      <Navbar.Brand href=\"/\"><img alt=\"logo\" height=\"30\" className=\"d-inline-block align-top\" src=\"/images/logo.png\"></img></Navbar.Brand>\n      <Navbar.Toggle onClick={() => setExpanded(expanded ? false : \"expanded\")} aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\n        <Nav>\n          <NavLink onClick={() => setExpanded(false)} className=\"nav-link\" to=\"/new-expense\">New Expense</NavLink>       \n          <NavLink onClick={() => setExpanded(false)} className=\"nav-link\" to=\"/dashboard\">Dashboard</NavLink>\n          <NavLink onClick={() => setExpanded(false)} className=\"nav-link\" to=\"/about\">About</NavLink>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nexport default AppNavbar\n\n\n","import React from 'react'\n\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nimport '../App.css'\n\n\n\nconst Login = () => {\n\n  return (\n    <Card className=\"login-card-element\">\n      <Card.Header>Welcome!</Card.Header>\n      <Card.Body>\n        <Card.Title className=\"text-center\">\n          Sign in with: \n        </Card.Title>\n        <Button block className=\"btn-facebook\">Facebook</Button><br/>\n        <Button block className=\"btn-google\">Google</Button><br/>\n        <Button block className=\"btn-github\">Github</Button><br/>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Login","import { RECEIPT_IMAGE_LOADED } from './actionTypes'\n\nexport const receiptLoaded = receiptURL => ({\n  type: RECEIPT_IMAGE_LOADED,\n  payload: { receiptURL }\n})\n","export const RECEIPT_IMAGE_LOADED = 'RECEIPT_IMAGE_LOADED'\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst AspectRatioBox = (props) => {\n\n  const {width, heightPercent, ...propsExlcudingWidth} = props\n\n  const OUTER_STYLES = {\n    height: '0',\n    overflow: 'hidden',\n    paddingTop: heightPercent,\n    position: 'relative'\n  }\n\n  const INNER_STYLES = {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    width: '100%',\n    height: '100%'\n  }\n\n  return (\n    <div style={{width,margin:\"auto\"}}>\n      <div {...propsExlcudingWidth} style={OUTER_STYLES}>\n        <div style={INNER_STYLES}>\n          {props.children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {  }\n)(AspectRatioBox)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Button from 'react-bootstrap/Button'\nimport AspectRatioBox from './AspectRatioBox'\nimport { useDropzone } from 'react-dropzone'\nimport { receiptLoaded } from '../redux/actions'\n\nconst ALLOWED_FILE_TYPES = [\n  \"image/jpeg\",\n  \"image/png\"\n]\n\nconst KiB = 1024\nconst MiB = KiB*1024\nconst MAX_FILE_SIZE = 20*MiB\n\n\nfunction isDragAndDrop() {\n  const div = document.createElement('div')\n  return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div)\n}\n\nfunction isFormData() {\n  return ('FormData' in window)\n}\n\nfunction isFileReader() {\n  return ('FileReader' in window)\n}\n\nfunction isAdvancedUpload() {\n  return (isDragAndDrop() && isFormData() && isFileReader())\n}\n\nfunction generateFormClassNames() {\n\n  if(isAdvancedUpload()) {\n    return \"go-bottom has-advanced-upload\"\n  } else {\n    return \"go-bottom\"\n  }\n}\n\nfunction takeoverEvent(e) {\n  e.preventDefault()\n  e.stopPropagation()\n}\n\nfunction onDrop(e) {\n  if(e[0]) {\n    const myImg = document.getElementById('receiptImg')\n    myImg.src = URL.createObjectURL(e[0])\n    myImg.style.display = \"block\"\n    document.getElementById('ahs-ar-box').style.display = \"none\"\n  }\n}\n\nfunction onDropRejected(e) {\n  console.dir(e)\n  const rejectedFile = e[0]\n  if(rejectedFile) {\n    if(ALLOWED_FILE_TYPES.includes(rejectedFile.type) === false) {\n      alert('your file must be a supported image')\n    }\n    else if(rejectedFile.size > MAX_FILE_SIZE) {\n      alert('your file is too large. 3MiB limit.')\n    }\n  }\n}\n\nconst ReceiptUpload = () => {\n  // Initializing useDropzone hooks with options\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    allow: ALLOWED_FILE_TYPES,\n    maxSize: MAX_FILE_SIZE,\n    onDrop: onDrop,\n    onDrag: null,\n    noDragEventsBubbling: true,\n    onDragEnter: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDropAccepted: null,\n    onDropRejected: onDropRejected,\n    onFileDialogCancel: null,\n    preventDropOnDocument: true,\n    multiple: false\n  })\n\n  return (\n    <>\n      <img id=\"receiptImg\" style={{display:\"none\"}}/>\n      <AspectRatioBox id=\"ahs-ar-box\" width=\"200px\" heightPercent=\"120%\">\n        <div className=\"ahs-dropzone\" {...getRootProps()}>\n          <input className=\"dropzone-input\" {...getInputProps()} />\n          <div className=\"text-center\">\n            {isDragActive ? (\n              <p className=\"dropzone-content\">Release to drop the files here</p>\n            ) : (\n              <p className=\"dropzone-content\">\n                Drag 'n' drop some files here, or click to select files\n              </p>\n            )}\n          </div>\n        </div>\n      </AspectRatioBox>\n    </>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { receiptLoaded }\n)(ReceiptUpload)\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nconst NewCategoryModal = () => {\n  const [show, setShow] = React.useState(false);\n\n  const handleClose = () => {\n    setShow(false);\n  }\n  const handleSave = (e) => {\n    addNewCategory();\n    setShow(false);\n  }\n  const handleShow = () => setShow(true);\n\n  const addNewCategory = () => {\n    console.log('add new clicked')\n  }\n  return (\n    <>\n      <Button \n        block \n        variant=\"secondary\" \n        onClick={handleShow}\n      >\n        Add\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add New Category</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form id=\"add-category\" action={process.env.REACT_APP_API_SERVER + \"/add-category/\" + process.env.REACT_APP_TEST_USER_PROVIDERID} method=\"post\" className=\"go-bottom\">\n            <div className=\"form-input-container\">\n              <input id=\"category\" name=\"bucket_name\" type=\"text\" required/>\n              <label for=\"description\">New Category</label>\n            </div>\n          </form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button type=\"submit\" form=\"add-category\" variant=\"primary\" onClick={handleSave}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default NewCategoryModal","import React from 'react'\nimport { connect } from 'react-redux'\nimport { receiptLoaded } from '../redux/actions'\n\nimport ReceiptUpload from './ReceiptUpload'\n\nimport Button from 'react-bootstrap/Button'\nimport NewCategoryModal from './NewCategoryModal'\n\nclass NewExpenseForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: []\n    }\n  }\n\n  fetchCategories() {\n    fetch(process.env.REACT_APP_API_SERVER + \"/get-categories/\" + process.env.REACT_APP_TEST_USER_PROVIDERID)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data)\n      this.setState({ categories: data})\n    })\n  }\n  renderCategories(categories) {\n    return (\n      <>\n        <option value=\"\" selected>Select a category</option>\n        {categories.map((category, index) => {\n          return (\n            <option value={category.id} key={index}>{category.bucket_name}</option>\n          )\n        })}\n      </>\n    )\n  }\n  componentDidMount() {\n    this.fetchCategories()\n  }\n  render() {\n    \n    const receipt_image_box = (\n      <>\n        <div className=\"box__input\">\n          <input className=\"box__file\" type=\"file\" name=\"receipt\" id=\"file\" accept=\"image/*\" />\n          <label htmlFor=\"file\"><strong>Choose a file</strong><span className=\"box__dragndrop\"> or drag it here</span>.</label>\n          <button className=\"box__button\" type=\"submit\">Upload</button>\n        </div>\n        <div className=\"box__uploading\">Uploading&hellip;</div>\n        <div className=\"box__success\">Done!</div>\n        <div className=\"box__error\">Error! <span></span>.</div>\n      </>\n    )\n    \n    return (\n      <div>\n        <form action={process.env.REACT_APP_API_SERVER + \"/add-expense/\" + process.env.REACT_APP_TEST_USER_PROVIDERID} method=\"post\" className=\"go-bottom\">\n          <div className=\"form-input-container\">\n            <ReceiptUpload />\n          </div>\n          <div className=\"form-input-container\">\n            <input id=\"description\" name=\"description\" type=\"text\" required/>\n            <label for=\"description\">Expense Description</label>\n          </div>\n          <div className=\"form-input-container\">\n            <input id=\"amount\" name=\"amount\" type=\"text\" required/>\n            <label for=\"amount\">Expense Amount</label>\n          </div>\n          <div className=\"form-date form-input-container\">\n            <input id=\"date\" name=\"date\" type=\"date\" required/>\n            <label for=\"date\">Expense Date</label>\n          </div>\n          <div className=\"category-container\">\n            <div className=\"form-input-container form-select-container\">\n              <select id=\"category\" name=\"bucket_id\">\n                {this.renderCategories(this.state.categories)}\n              </select>\n            </div>\n            <div className=\"add-category-btn-container\">\n              <NewCategoryModal/>\n            </div>\n          </div>\n          <Button\n            type=\"submit\"\n            block\n            className=\"form-save-btn\"\n          >\n            Save New Expense\n          </Button>\n        </form>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { receiptLoaded }\n)(NewExpenseForm)\n","import React from 'react'\n\n// import Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nimport ReceiptImage from '../img/receipt.svg'\n\nconst ReceiptModal= () => {\n  const [show, setShow] = React.useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <span>\n      {/* <img onClick={handleShow} className=\"receipt-icon\" alt=\"receipt image\" src={ReceiptImage}></img> */}\n      <span onClick={handleShow}>Receipt</span>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <h2>\n            Receipt\n          </h2>\n        </Modal.Header>\n        <Modal.Body\n          className=\"receipt-image-container\"\n        >\n          <img className=\"receipt-image\" alt=\"receipt\" src=\"https://cdn2.thecatapi.com/images/dub.jpg\"></img>\n        </Modal.Body>\n      </Modal>\n    </span>\n  );\n}\n\nexport default ReceiptModal\n","import React from 'react'\n// import { connect } from 'react-redux'\n\nimport Table from 'react-bootstrap/Table'\n// import Accordion from 'react-bootstrap/Accordion'\n// import Card from 'react-bootstrap/Card'\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nimport ReceiptModal from './ReceiptModal'\n\nclass ExpenseTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        isFetching: false,\n        expenses: []\n    };\n  }\n  fetchExpenses() {\n    fetch(process.env.REACT_APP_API_SERVER + \"/get-expenses/\" + process.env.REACT_APP_TEST_USER_PROVIDERID)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ expenses: data})\n      })\n  }\n  renderTable(expenses, status) {\n    let statusSortedExpenses = expenses.reduce((result, expense) => {\n      if (expense.status === status) {\n        result.push(expense)\n      }\n      return result\n    }, [])\n    return (\n      <tbody>\n        {statusSortedExpenses.map((expense, index) => (\n          <tr key={index}>\n          <td>\n            {expense.bucket_name}\n          </td>\n          <td>\n            {expense.expense_date}<br/>\n            {expense.receipt_name}\n          </td>\n          <td>\n            {expense.amount}\n          </td>\n          <td>\n            <Dropdown>\n              <Dropdown.Toggle\n                size=\"sm\"\n                variant=\"secondary\"\n              >\n                <Dropdown.Menu>\n                  <Dropdown.Item>\n                    <ReceiptModal/>\n                  </Dropdown.Item>\n                  <Dropdown.Item>\n                    Edit\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown.Toggle>\n            </Dropdown>\n          </td>\n        </tr>\n        ))}\n      </tbody>\n    )\n  }\n  componentDidMount() {\n    this.fetchExpenses()\n  }\n  render() {\n    return (\n      <div id=\"expenseTable\">\n        <h3>Not Submitted</h3>\n        <Table\n          bordered\n          hover\n          size=\"sm\"\n        >\n          <thead>\n            <tr>\n              <th>Category</th>\n              <th>Description</th>\n              <th>Amount</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n            {this.renderTable(this.state.expenses, \"Not submitted\")}\n        </Table>\n        <h3>Pending</h3>\n        <Table\n          bordered\n          hover\n          size=\"sm\"\n        >\n          <thead>\n            <tr>\n              <th>Category</th>\n              <th>Description</th>\n              <th>Amount</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n            {this.renderTable(this.state.expenses, \"Pending\")}\n        </Table>\n        <h3>Paid</h3>\n        <Table\n          bordered\n          hover\n          size=\"sm\"\n        >\n          <thead>\n            <tr>\n              <th>Category</th>\n              <th>Description</th>\n              <th>Amount</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n            {this.renderTable(this.state.expenses, \"Paid\")}\n        </Table>\n      </div>\n    )\n  } \n}\n\nexport default ExpenseTable","import React from 'react'\n\nimport ExpenseTable from './ExpenseTable'\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      greeting: \"\"\n    }\n  }\n  fetchUserName() {\n    fetch(process.env.REACT_APP_API_SERVER + \"/get-user/\" + process.env.REACT_APP_TEST_USER_PROVIDERID)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ greeting: \"Hello, \" + data[0].first_name + \"!\" })\n      })\n  }\n  componentDidMount() {\n    this.fetchUserName()\n  }\n  \n  render() {\n    return (\n      <div>\n        <h1>{this.state.greeting}</h1>\n        <ExpenseTable/>\n      </div>\n    )\n  }\n}\n\nexport default Dashboard","import React from 'react'\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\nimport AppNavbar from './components/AppNavbar'\nimport Login from './components/Login'\nimport NewExpense from './components/NewExpense'\nimport Dashboard from './components/Dashboard'\n\nrequire('dotenv').config();\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <AppNavbar/>\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/new-expense\">\n              <NewExpense/>\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard/>\n            </Route>\n            <Route path=\"/about\">\n              <h1>About</h1>\n            </Route>\n            <Route path=\"/\">\n              <Login/>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { RECEIPT_IMAGE_LOADED } from '../actionTypes'\n\nconst initialState = {\n  \n}\n\nfunction deepCopy (oldObject) {\n  return JSON.parse(JSON.stringify(oldObject))\n}\n\nexport default function (state = initialState, action) {\n  let newState = deepCopy(state)\n  const {type} = action\n\n  if (type === RECEIPT_IMAGE_LOADED) {\n    const { receiptURL } = action.payload\n    if(newState.receiptURL !== \"\") {\n      URL.revokeObjectURL(newState.receiptURL)\n    }\n    newState.receiptURL = receiptURL\n  }\n  else if(type === \"PLACEHOLDER_ACTION\") {\n    // ...\n  }\n\n  return newState\n}\n","import { combineReducers } from 'redux'\nimport uploadForm from './uploadForm'\n\nexport default combineReducers({ uploadForm /*, reducer2 */ })\n","import { createStore } from 'redux'\nimport rootReducer from './reducers'\n\nexport default createStore(rootReducer)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\nimport './App.css'\n\n\nconst rootElement = document.getElementById('root')\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n)\n// ReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}